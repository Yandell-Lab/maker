.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DS_DO 1"
.TH DS_DO 1 "2005-05-10" "perl v5.8.6" "User Contributed Perl Documentation"
.SH "NAME"
ds_do \- Execute a command in a set of datastore directories.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
ds_do \-\-all|\-\-regexp=RE|\-id=CG0666 \*(L"mfold < input > output\*(R"
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
ds_do is a command line tool that executes a shell command in a
datastore directory, for
.PP
.Vb 1
\&  - an ID given on the command line
.Ve
.PP
or
.PP
.Vb 1
\&  - all of the directories in the datastore
.Ve
.PP
or
.PP
.Vb 2
\&  - all of the directories in the datastore that match a regular
\&    expression.
.Ve
.PP
It has two basic modes of operation.  If you specify \-\-all or \-\-regexp
\&'regular_expression' it iterates over the directories that exist in
the datastore and executes the command there.  Otherwise it expects
an \s-1ID\s0 on the command line, and executes the command in its directory.
.Sh "\s-1OPTIONS\s0"
.IX Subsection "OPTIONS"
Options can be specified with or without equal sign, and with a single
or a double dash.  \f(CW\*(C`\-\-root foo\*(C'\fR and \f(CW\*(C`\-root=foo\*(C'\fR are equivalent.
.IP "\-\-help" 4
.IX Item "--help"
Generate a short usage message.
.IP "\-\-root /path/to/the/datastore/root" 4
.IX Item "--root /path/to/the/datastore/root"
Specify the path to the root of the datastore.
.IP "\-\-depth \s-1INTEGER\s0" 4
.IX Item "--depth INTEGER"
Specify the depth of the datastore.  Normal values are 1, 2, 3.
Default is 2.
.IP "\-\-digest MD5|CG" 4
.IX Item "--digest MD5|CG"
Specify the type of digest with which the datastore was built.  Valid
options include the \s-1MD5\s0 and \s-1CG\s0.  Default is \*(L"\s-1MD5\s0\*(R".
.IP "\-\-all" 4
.IX Item "--all"
Iterate over all of the directories in the datastore.
.ie n .IP "\-\-regexp ""\s-1REGEXP\s0""" 4
.el .IP "\-\-regexp ``\s-1REGEXP\s0''" 4
.IX Item "--regexp REGEXP"
Iterate over all of the directories in the datastore that match the 
regular expression \*(L"\s-1REGEXP\s0\*(R".
.IP "\-\-readonly" 4
.IX Item "--readonly"
Don't create the directory if it doesn't already exist.  This is a
great way to catch typos in identifiers, otherwise the directory is
silently created.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
ds_do \-\-root /tmp/test\-me \-\-all \*(L"wc < /etc/termcap > count\*(R"
.Sp
.RS 4
Creates a file in each of the directories in the datastore
that contains the wordcount info for hte file /etc/termcap.
.RE
.PP
ds_do \-\-root /tmp/test\-me \-\-all pwd
.Sp
.RS 4
Prints out the names of the directories in the datastore (a slower
version of \f(CW\*(C`ds_dir \-\-all\*(C'\fR).
.RE
.PP
ds_do \-\-root /tmp/test\-me \-\-id \s-1CG0670\s0 cat count
.Sp
.RS 4
Spits out the contents of the file named \f(CW\*(C`cat\*(C'\fR in the datastore
for \f(CW\*(C`CG0670\*(C'\fR.
=back
.SH "DEFAULT VALUES"
.IX Header "DEFAULT VALUES"
The \f(CW\*(C`\-\-digest\*(C'\fR, \f(CW\*(C`\-\-depth\*(C'\fR, and \f(CW\*(C`\-\-root\*(C'\fR options can be set several
ways.
.Sp
Any option specified on the command line has the highest precedence.
.Sp
If no matching option is specified on the command line, the user's
environment is checked for the environment variables
\&\f(CW\*(C`DATASTORE_DIGEST\*(C'\fR, \f(CW\*(C`DATASTORE_DEPTH\*(C'\fR, and \f(CW\*(C`DATASTORE_ROOT\*(C'\fR and
their value is used.
.Sp
Failing that, default values are used.
.SH "AUTHOR"
.IX Header "AUTHOR"
George Hartzell, <hartzell @ fruitfly.org>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
ds_do, Datastore::Base, Datastore::MD5, Datastore::CG,
perl.
