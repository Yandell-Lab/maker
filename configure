#! /usr/bin/perl

use warnings;
use strict;

my $perlLocation = $^X;

my $goodParam;
do {
    $goodParam = 1;
    $perlLocation = &promptScreen("SET PATH FOR PERL\n\n  Please verify the path for perl.  This should the full path to the Perl interpreter.\n  e.g. /usr/local/Perl5.8.5/bin/perl\n",
				  "Enter new path if not correct or press Enter to accept",
				  $perlLocation
				  );
    
    #handle directory given as path
    if ( !( $perlLocation =~ /perl$/ ) ){
	$perlLocation .= "/" if ($perlLocation !~ /\/$/);
	$perlLocation .= "perl";
    }
    
    if (!-f $perlLocation || !-x $perlLocation ){
	print "Perl not found at \"$perlLocation\"\n";
	print "<PRESS ENTER TO CONTINUE>\n";
	my $answer    = <STDIN>;
	$perlLocation = $^X;
	$goodParam = 0;
    }
    
} while (!$goodParam);

exec("$perlLocation", $0) if($perlLocation ne $^X);

print "Hello World\n";


sub promptScreen {
    my $screenText     = shift;
    my $promptText     = shift;
    my $defaultAnswer  = shift;
    my $validResponses = shift;

    my $answer = undef;

  # Clear the screen
    system( "clear" );

    print "\n\n\n";
    print $screenText;
    my $numLines = ( $screenText =~ s/(\n)/$1/g );
    for ( my $i = 0 ; $i < 15 - $numLines ; $i++ ) {
	print "\n";
    }
    if ( defined $validResponses ) {
	$promptText .= " ( " . $validResponses . " )";
    }
    if ( defined $defaultAnswer ) {
	$promptText .= " [ " . $defaultAnswer . " ]: ";
    }
    print $promptText;
    $answer = <STDIN>;

    if ( $answer =~ /^\s*$/ ) {
	$answer = $defaultAnswer;
    }
    else {
	$answer =~ s/[\n\r]+//g;
    }

    return ( $answer );
}
