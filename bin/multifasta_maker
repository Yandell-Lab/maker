#!/usr/bin/perl -w
use Getopt::Long;

$| = 1;

my $usage = "
Usage:

        multifasta_maker [options] <genome_file> <maker_opts.ctl> <maker_bopts.ctl> <maker_exe.ctl>

        The genome file must be in fasta format.

        The last three arguments are user control files that specify how maker should behave.
        Please see maker documentation to learn more about control file format.

Options:

        -R Turns repeat masking off (* See Warning)
        -h Help

Warning:

        *When using the -R flag, maker expects that the input genome file is already masked.
         This means that if your genome file contains lower case characters, maker will
         consider those characers to be soft masked.                                                                                                                                                                                                                                                                                    
";

my $opt_R;

GetOptions ( "R" => \$opt_R,
	     "help|?" => sub{ print $usage; exit;}
	   );

if ($#ARGV < 3) {
    die $usage;
}

my $fasta_file = shift @ARGV;
my @cf = @ARGV;

my %seq = read_seq($fasta_file);

while (my $k = each %seq) {
    $fn = (split(/\s+|\t+|\n+/, $k))[0];
    my $qfile = "$fn\.fasta";
    open SFILE, ">$qfile" or die $!;
    print SFILE ">",$k,"\n",$seq{$k},"\n";
    close SFILE;
    $command = "maker";
    $command .= " -R" if ($opt_R);
    $command .= " $fn\.fasta $cf[0] $cf[1] $cf[2]";

    system("$command");
}

sub read_seq{
    my $infile = shift @_;
    my %hash = ();
    open SEQ, "<$infile" or die $!;
    my $header = '';
    while (my $line = <SEQ>) {
	chomp($line);
	if ($line =~ m/>(.+)/) {
	    $header = $1;
	    $hash{$header} = '';
	}else {
	    $hash{$header} = join("", $hash{$header},$line);
	}
    }
    close SEQ;
    return %hash;
}
