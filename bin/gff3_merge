#! /usr/bin/perl -w

use strict;
use Getopt::Long;
use File::Temp qw(tempfile);

my $usage = "";

my $datastore;
my @files;
my $outfile;

GetOptions ("datastor|d=s" => \$datastore,
	    "o=s" => \$outfile,
	    "help|?" => sub{print $usage; exit();}
	    );

if(! $datastore){
    @files = @ARGV;
}

if((! $datastore && ! @files) || ! $outfile){
    print $usage;
    exit();
}

die "ERROR: The file \'$datastore\' does not exist\n" if ($datastore && ! -e $datastore);
if ($datastore){
    open(IN, "< $datastore");

    #uniq the entries
    my %entries;
    @entries{@{[<IN>]}} = ();
    
    foreach my $e (keys %entries){
	next unless ($e =~ /FINISHED/);
	chomp $e;
	my ($id, $dir, $status) = split("\t", $e);
	push(@files, $dir);
    }

    foreach my $file (@files){
	$file =~ /([^\/]+)$/;
	$file = "$file/$1.gff";
    }
}

@files = sort @files;

open(my $GFF, "> $outfile");
print $GFF "\#\#gff-version 3\n";

my ($ANN, $ann_file) = tempfile();
my ($FAS, $fas_file) = tempfile();
print $FAS "\#\#FASTA\n";

my %uniq;
foreach my $file (@files){
    die "ERROR: The file \'$file\' does not exist\n" if (! -e $file);
    open(IN, "< $file") || die "ERROR: Could not open file \'$file\'\n";

    my $FH = $ANN;

    while (defined(my $line = <IN>)){
	next if ($line =~ /^\#\#gff-version 3/);
	if($line =~ /^\#\#genome-build/){
	    next if exists $uniq{$line};
	    $uniq{$line}++;
	    print $GFF $line;
	    next;
	}
	if($line =~ /^\#\#sequence-region/){
            die "ERROR: This contig has already been added\: $line\n" if exists $uniq{$line};
            $uniq{$line}++;
            print $GFF $line;
            next;
        }
	if ($line =~ /^\#\#FASTA/){
	    $FH = $FAS;
	    next;
	}
	if ($line =~ /^>/){
	    $FH = $FAS;
	}
	chomp $line;
	print $FH $line . "\n" if($line);
    }
}
close($GFF);
close($ANN);
close($FAS);

system ("cat $ann_file >> $outfile");
system ("cat $fas_file >> $outfile");
unlink("$ann_file");
unlink("$fas_file");
