#! /usr/bin/perl -w

use strict;
use Getopt::Long;
use File::Temp qw(tempfile);

my $usage = "

Synopsis:

gff3_merge -d maker_datastore_index.log
gff3_merge -o genome.all.gff <gff3_file1> <gff3_file2> ...

Descriptions:

This script will take a MAKER datastore index log file, extract all
the relevant GFF3 files and combined GFF3 file.  The script can also
combine other correctly formated GFF3 files.  For this to work
properly you need to be in the same directory as the datastore index.

Options:

  -d The location of the MAKER datastore index log file.
  -o Alternate base name for the output files.
  -g Only write gene models to the file, and ignore evidence.

";

my $datastore;
my @files;
my $outfile;
my $g_flag;

GetOptions ("datastor|d=s" => \$datastore,
	    "o=s" => \$outfile,
	    "g" => \$g_flag,
	    "help|?" => sub{print $usage; exit();}
	    );

if(! $datastore){
    @files = @ARGV;
}

if(! $datastore && ! @files) {
    print $usage;
    exit();
}

if (! $outfile){
    ($outfile) = $datastore =~ /([^\/]+)$/;
    $outfile =~ s/_master_datastore_index.log//;
    $outfile .= ".gff";
    $outfile = "genome.all.gff" if(! defined $outfile);
}

die "ERROR: The file \'$datastore\' does not exist\n" if ($datastore && ! -e $datastore);
if ($datastore){
    open(IN, "< $datastore");

    #uniq the entries
    my %seen;
    while(my $e = <IN>){
	next unless ($e =~ /FINISHED/);
	next if $seen{$e};
	$seen{$e}++;
	chomp $e;
	my ($id, $dir, $status) = split("\t", $e);
	$dir =~ s/\/$//;
	push(@files, $dir);
    }

    foreach my $file (@files){
	$file =~ /([^\/]+)$/;
	$file = "$file/$1.gff";
    }
}

@files = sort @files;

open(my $GFF, "> $outfile");
print $GFF "\#\#gff-version 3\n";

my ($ANN, $ann_file) = tempfile();
my ($FAS, $fas_file) = tempfile();
print $FAS "\#\#FASTA\n";

my %uniq;
foreach my $file (@files){
    die "ERROR: The file \'$file\' does not exist\n" if (! -e $file);
    open(IN, "< $file") || die "ERROR: Could not open file \'$file\'\n";

    my $FH = $ANN;

    while (defined(my $line = <IN>)){
	next if ($line =~ /^\#\#gff-version 3/);
	if($line =~ /^\#\#genome-build/){
	    next if exists $uniq{$line};
	    $uniq{$line}++;
	    print $GFF $line;
	    next;
	}
	if($line =~ /^\#\#sequence-region/){
	    die "ERROR: This contig has already been added\: $line\n" if exists $uniq{$line};
	    $uniq{$line}++;
	    print $GFF $line;
	    next;
	}
	if ($line =~ /^\#\#FASTA/){
	    $FH = $FAS;
	    next;
	}
	if ($line =~ /^>/){
	    $FH = $FAS;
	}

	next if($g_flag && $line !~ /^[^\t]+\tmaker\t/);

	chomp $line;
	print $FH $line . "\n" if($line);
    }
}
close($GFF);
close($ANN);
close($FAS);

system ("cat $ann_file >> $outfile");
system ("cat $fas_file >> $outfile");
unlink("$ann_file");
unlink("$fas_file");
