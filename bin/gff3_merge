#! /usr/local/perl -w

use strict;
use Getopt::Long;
use File::Temp qw(tempfile);

my $usage = "";

my $datastore;
my @files;
my $outfile;

GetOptions ("datastor|d" => \$datastore,
	    "i=s" => \@files,
	    "o=s" => \$outfile,
	    "help|?" => sub{print $usage; exit();}
	    );

if(! $datastore && ! @files){
    print $usage;
    exit();
}

die "ERROR: The file \'$datastore\' does not exist\n" if ($datastore && ! -e $datastore);
if ($datastore){
    open(IN, "< $datastore");

    @files = <IN>;
    @files = grep (/FINISHED/, @files);

    foreach my $file (@files){
	$file =~ /([^\/]+)$/;
	$file = "$file/$1.gff";
    }
}

my ($ANN, $ann_file) = tempfile();
print $ANN "\#\#gff-version 3\n";
my ($FAS, $fas_file) = tempfile();
print $FAS "\#\#FASTA\n";

foreach my $file (@files){
    die "ERROR: The file \'$file\' does not exist\n" if (! -e $file);
    open(IN, "< $file") || die "ERROR: Could not open file \'$file\'\n";

    my $FH = $ANN;

    while (defined(my $line = <IN>)){
	next if ($line =~ /^\#\#gff-version 3/);
	if ($line =~ /^\#\#FASTA/){
	    $FH = $FAS;
	    next;
	}
	chomp $line;
	print $FH $line . "\n" if($line);
    }
}

close($ANN);
close($FAS);

system ("mv $ann_file $outfile");
system ("cat $fas_file >> $outfile");
unlink("$fas_file");
